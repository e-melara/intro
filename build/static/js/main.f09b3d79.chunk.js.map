{"version":3,"sources":["components/ImageItem.jsx","hooks/useGifHooks.js","helpers/GifCategory.js","components/GridGif.jsx","components/AddGifExpert.jsx","GifExpert.jsx","index.jsx"],"names":["ImageItem","image","name","types","className","src","alt","map","type","index","useGifHooks","category","useState","data","error","loading","state","setState","useEffect","Promise","resolve","reject","url","encodeURI","fetch","then","response","json","id","catch","GifCategory","pokemon","GridGif","images","AddGifExpert","setCategories","inputValue","setInputValue","onSubmit","e","preventDefault","all","value","onChange","target","GifExpert","categories","categorie","root","document","querySelector","ReactDom","render"],"mappings":"2KAgBeA,MAdf,YAA4C,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACjC,OACC,sBAAKC,UAAU,wCAAf,UACC,qBAAKC,IAAKJ,EAAOK,IAAK,SAAWJ,IACjC,4BAAIA,IACJ,oCACEC,QADF,IACEA,OADF,EACEA,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACX,6BAAwBD,GAAfN,EAAOO,YCNN,SAASC,EAAYC,GAAW,IAAD,EACnBC,mBAAS,CAClCC,KAAM,GACNC,OAAO,EACPC,SAAS,IAJmC,mBACtCC,EADsC,KAC/BC,EAD+B,KAa7C,OANAC,qBAAU,YCVJ,SAAqBP,GAC3B,OAAO,IAAIQ,SAAQ,SAAUC,EAASC,GACrC,IAAMC,EAAG,4CAAwCC,UAAUZ,IAC3Da,MAAMF,GACJG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACZ,GACN,OAAOO,EAAQ,CACdQ,GAAIf,EAAKe,GACT1B,KAAMW,EAAKX,KACXC,MAAOU,EAAKV,MAAMI,KAAI,qBAAGC,KAAgBN,QACzCD,MAAM,iDAAD,OAAmDY,EAAKe,GAAxD,aAGNC,MAAMR,ODFRS,CAAYnB,GACVc,MAAK,SAACM,GAAD,OAAad,EAAS,CAAEJ,KAAMkB,EAAShB,SAAS,EAAOD,OAAO,OACnEe,OAAM,kBAAMZ,EAAS,CAAEF,SAAS,EAAOD,OAAO,SAC9C,CAACH,IAEGK,EEIOgB,MAff,YAAgC,IAAD,EACWtB,EADX,EAAZC,UACVI,EADsB,EACtBA,QAASD,EADa,EACbA,MAAamB,EADA,EACNpB,KAExB,OACC,+BACEE,GAAW,8CACVA,IAAYD,GACb,qBAAKV,UAAU,8CAAf,SACC,cAAC,EAAD,eAA6D6B,IAAvC,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQL,IAAK,aAAb,OAA2BK,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAQ/B,a,OCgBzCgC,MA1Bf,YAA0C,IAAlBC,EAAiB,EAAjBA,cAAiB,EACJvB,mBAAS,IADL,mBACjCwB,EADiC,KACrBC,EADqB,KAaxC,OACC,mCACC,sBAAMC,SARa,SAACC,GACrBA,EAAEC,iBACFL,GAAc,SAACM,GAAD,OAAUL,GAAV,mBAAyBK,OACvCJ,EAAc,KAKb,SACC,uBAAO7B,KAAK,OAAOkC,MAAON,EAAYO,SAbf,SAACJ,GAC1BF,EAAcE,EAAEK,OAAOF,eCkBVG,MAnBf,WAAsB,IAAD,EACgBjC,mBAAS,CAAC,UAD1B,mBACbkC,EADa,KACDX,EADC,KAGpB,OACC,qCACC,2CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,oBAAI/B,UAAU,cAAd,SACE0C,EAAWvC,KAAI,SAACwC,GAAD,OACf,cAAC,EAAD,CAAyBpC,SAAUoC,GAArBA,YCRbC,G,MAAOC,SAASC,cAAc,UACpCC,IAASC,OAAO,cAAC,EAAD,IAAeJ,K","file":"static/js/main.f09b3d79.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ImageItem({ image, name, types }) {\n return (\n  <div className=\"card animate__animated animate__flash\">\n   <img src={image} alt={\"Image \" + name} />\n   <p>{name}</p>\n   <ol>\n    {types?.map((type, index) => (\n     <li key={name + index}>{type}</li>\n    ))}\n   </ol>\n  </div>\n );\n}\n\nexport default ImageItem;\n","import { useEffect, useState } from \"react\";\nimport { GifCategory } from \"../helpers/GifCategory\";\n\nexport default function useGifHooks(category) {\n const [state, setState] = useState({\n  data: [],\n  error: false,\n  loading: false,\n });\n\n useEffect(() => {\n  GifCategory(category)\n   .then((pokemon) => setState({ data: pokemon, loading: false, error: false }))\n   .catch(() => setState({ loading: false, error: true }));\n }, [category]);\n\n return state;\n}\n","export function GifCategory(category) {\n return new Promise(function (resolve, reject) {\n  const url = `https://pokeapi.co/api/v2/pokemon/${encodeURI(category)}`;\n  fetch(url)\n   .then((response) => response.json())\n   .then((data) => {\n    return resolve({\n     id: data.id,\n     name: data.name,\n     types: data.types.map(({ type }) => type.name),\n     image: `https://pokeres.bastionbot.org/images/pokemon/${data.id}.png`,\n    });\n   })\n   .catch(reject);\n });\n}\n","import React from \"react\";\n\nimport ImageItem from \"./ImageItem\";\nimport useGifHooks from \"../hooks/useGifHooks\";\n\nfunction GridGif({ category }) {\n const { loading, error, data: images } = useGifHooks(category);\n\n return (\n  <li>\n   {loading && <p>Loading ....</p>}\n   {!loading && !error && (\n    <div className=\"card-grid animate__animated animate__fadeIn\">\n     <ImageItem key={images?.id + \"-pokemon-\" + images?.name} {...images} />\n    </div>\n   )}\n  </li>\n );\n}\n\nexport default GridGif;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction AddGifExpert({ setCategories }) {\n const [inputValue, setInputValue] = useState(\"\");\n\n const handleInputChange = (e) => {\n  setInputValue(e.target.value);\n };\n\n const handleSubmit = (e) => {\n  e.preventDefault();\n  setCategories((all) => [inputValue, ...all]);\n  setInputValue(\"\");\n };\n\n return (\n  <>\n   <form onSubmit={handleSubmit}>\n    <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n   </form>\n  </>\n );\n}\n\nAddGifExpert.propTypes = {\n setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddGifExpert;\n","import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\n\nimport GridGif from \"./components/GridGif\";\nimport AddGifExpert from \"./components/AddGifExpert\";\n\nfunction GifExpert() {\n const [categories, setCategories] = useState([\"ditto\"]);\n\n return (\n  <>\n   <h2>GifExpert</h2>\n   <AddGifExpert setCategories={setCategories} />\n   <hr />\n   <ul className=\"list-styled\">\n    {categories.map((categorie) => (\n     <GridGif key={categorie} category={categorie} />\n    ))}\n   </ul>\n  </>\n );\n}\n\n// GifExpert.propTypes = {};\n\nexport default GifExpert;\n","// mEaArIlmHmNIX2NtNJPbeieqcPoVFlaK\n\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport GifExpert from \"./GifExpert\";\nimport \"./index.css\";\n\nconst root = document.querySelector(\"#root\");\nReactDom.render(<GifExpert />, root);\n"],"sourceRoot":""}